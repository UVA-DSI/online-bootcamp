library(devtools)
install.packages("devtools")
library(devtools)
install_github("psychemedia/htmlwidget-hexjson")
instal(rtools)
install(rtools)
install(jsonline)
install(jsonlite)
library(jsonlite)
library(hexjsonwidget)
m <- fromJSON(./constituencies.hexjson)
m <- fromJSON(constituencies.hexjson)
m <- fromJSON(/constituencies.hexjson)
m <- fromJSON(\constituencies.hexjson)
source('~/UVA Technical Bootcamp/Module 5/uk_constituency_hexbin/uk_constituency_hexbin.R', echo=TRUE)
constituencies <- read.csv2("~/UVA Technical Bootcamp/Module 5/uk_constituency_hexbin/constituencies.hexjson", sep="")
View(constituencies)
m<- fromJSON("constituencies.hexjson")
View(m)
hexjsonwidget(m)
hexjsonwidget(m, label = '')
View(m)
hexjsonwidget(m, label = 'NA')
hexjsonwidget(m, label = 'NA', col_hexfill = '')
hexjsonwidget(m, label = 'NA', col_textfill = '')
hexjsonwidget(m, label = NA, col_textfill = '')
install(parlitools)
install.packages("parlitools")
local_hex_map
library(parlitools)
local_hex_map
lhm <- local_hex_map
View(lhm)
plot(lhm)
plot(west_hex_map)
library(leaflet)
library(sf)
library(htmlwidgets)
library(dplyr)
library(parlitools)
library(cartogram)
west_hex_map <- parlitools::west_hex_map
party_colour <- parlitools::party_colour
elect2017 <- parlitools::bes_2017
elect2017_win_colours <- left_join(elect2017, party_colour, by = c("winner_17" ="party_name")) #Join to current MP data
gb_hex_map <- right_join(west_hex_map, elect2017_win_colours, by = c("gss_code"="ons_const_id")) #Join colours to hexagon map
gb_hex_map <- as(gb_hex_map, "Spatial")
gb_hex_map <- as(gb_hex_map, "SpatialPolygonsDataFrame")
gb_hex_map$majority_17 <- round(gb_hex_map$majority_17, 2)
gb_hex_map$turnout_17 <- round(gb_hex_map$turnout_17, 2)
gb_hex_map$marginality <- (100-gb_hex_map$majority_17)^3
gp_hex_scaled <- cartogram_cont(gb_hex_map, 'marginality', itermax = 5)
# Creating map labels
labels <- paste0(
"Constituency: ", gp_hex_scaled$constituency_name.y, "</br>",
"Most Recent Winner: ", gp_hex_scaled$winner_17, "</br>",
"Most Recent Majority: ", gp_hex_scaled$majority_17, "%","</br>",
"Turnout: ", gp_hex_scaled$turnout_17, "%"
) %>% lapply(htmltools::HTML)
# Creating the map itself
leaflet(options=leafletOptions(
dragging = FALSE, zoomControl = FALSE, tap = FALSE,
minZoom = 6, maxZoom = 6, maxBounds = list(list(2.5,-7.75),list(58.25,50.0)),
attributionControl = FALSE),
gp_hex_scaled) %>%
addPolygons(
color = "grey",
weight=0.75,
opacity = 0.5,
fillOpacity = 1,
fillColor = ~party_colour,
label=labels) %>%
htmlwidgets::onRender(
"function(x, y) {
var myMap = this;
myMap._container.style['background'] = '#fff';
}")%>%
mapOptions(zoomToLimits = "first")
clearall
clr
library(leaflet)
install(leaflet)
install.packages("leaflet")
library(leaflet)
library(sf)
library(htmlwidgets)
library(dplyr)
library(parlitools)
library(cartogram)
install.packages("cartogram")
library(cartogram)
whm <- parlitools::west_hex_map
plot(whm)
party_colour <- parlitools::party_colour
gb_hex_map <- right_join(west_hex_map, elect2017_win_colours, by = c("gss_code"="ons_const_id")) #Join colours to hexagon map
gb_hex_map
leaflet(whm)
leaflet(options=leafletOptions(
dragging = FALSE, zoomControl = FALSE, tap = FALSE,
minZoom = 6, maxZoom = 6, maxBounds = list(list(2.5,-7.75),list(58.25,50.0)),
attributionControl = FALSE),
gp_hex_scaled) %>%
addPolygons(
color = "grey",
weight=0.75,
opacity = 0.5,
fillOpacity = 1,
fillColor = ~party_colour,
label=labels) %>%
htmlwidgets::onRender(
"function(x, y) {
var myMap = this;
myMap._container.style['background'] = '#fff';
}")%>%
mapOptions(zoomToLimits = "first")
labels <- paste0(
"Constituency: ", gp_hex_scaled$constituency_name.y, "</br>",
"Most Recent Winner: ", gp_hex_scaled$winner_17, "</br>",
"Most Recent Majority: ", gp_hex_scaled$majority_17, "%","</br>",
"Turnout: ", gp_hex_scaled$turnout_17, "%"
) %>% lapply(htmltools::HTML)
gp_hex_scaled <- cartogram_cont(gb_hex_map, 'marginality', itermax = 5)
leaflet(options=leafletOptions(
dragging = FALSE, zoomControl = FALSE, tap = FALSE,
minZoom = 6, maxZoom = 6, maxBounds = list(list(2.5,-7.75),list(58.25,50.0)),
attributionControl = FALSE),
gp_hex_scaled) %>%
addPolygons(
color = "grey",
weight=0.75,
opacity = 0.5,
fillOpacity = 1,
fillColor = ~party_colour,
label=labels) %>%
htmlwidgets::onRender(
"function(x, y) {
var myMap = this;
myMap._container.style['background'] = '#fff';
}")%>%
mapOptions(zoomToLimits = "first")
gp_hex_scaled <- cartogram_cont(gb_hex_map, 'marginality', itermax = 5)
elect2017_win_colours <- left_join(elect2017, party_colour, by = c("winner_17" ="party_name")) #Join to current MP data
gb_hex_map <- right_join(west_hex_map, elect2017_win_colours, by = c("gss_code"="ons_const_id")) #Join colours to hexagon map
gb_hex_map <- as(gb_hex_map, "Spatial")
gb_hex_map <- as(gb_hex_map, "SpatialPolygonsDataFrame")
gb_hex_map$majority_17 <- round(gb_hex_map$majority_17, 2)
gb_hex_map$turnout_17 <- round(gb_hex_map$turnout_17, 2)
gb_hex_map$marginality <- (100-gb_hex_map$majority_17)^3
gp_hex_scaled <- cartogram_cont(gb_hex_map, 'marginality', itermax = 5)
st_transform(gb_hex_map)
library(leaflet)
library(sf)
library(htmlwidgets)
library(dplyr)
library(parlitools)
library(cartogram)
west_hex_map <- parlitools::west_hex_map
party_colour <- parlitools::party_colour
elect2017 <- parlitools::bes_2017
elect2017_win_colours <- left_join(elect2017, party_colour, by = c("winner_17" ="party_name")) #Join to current MP data
gb_hex_map <- right_join(west_hex_map, elect2017_win_colours, by = c("gss_code"="ons_const_id")) #Join colours to hexagon map
gb_hex_map <- as(gb_hex_map, "Spatial")
gb_hex_map <- as(gb_hex_map, "SpatialPolygonsDataFrame")
gb_hex_map$majority_17 <- round(gb_hex_map$majority_17, 2)
gb_hex_map$turnout_17 <- round(gb_hex_map$turnout_17, 2)
gb_hex_map$marginality <- (100-gb_hex_map$majority_17)^3
gp_hex_scaled <- cartogram_cont(gb_hex_map, 'marginality', itermax = 5)
# Creating map labels
labels <- paste0(
"Constituency: ", gp_hex_scaled$constituency_name.y, "</br>",
"Most Recent Winner: ", gp_hex_scaled$winner_17, "</br>",
"Most Recent Majority: ", gp_hex_scaled$majority_17, "%","</br>",
"Turnout: ", gp_hex_scaled$turnout_17, "%"
) %>% lapply(htmltools::HTML)
# Creating the map itself
leaflet(options=leafletOptions(
dragging = FALSE, zoomControl = FALSE, tap = FALSE,
minZoom = 6, maxZoom = 6, maxBounds = list(list(2.5,-7.75),list(58.25,50.0)),
attributionControl = FALSE),
gp_hex_scaled) %>%
addPolygons(
color = "grey",
weight=0.75,
opacity = 0.5,
fillOpacity = 1,
fillColor = ~party_colour,
label=labels) %>%
htmlwidgets::onRender(
"function(x, y) {
var myMap = this;
myMap._container.style['background'] = '#fff';
}")%>%
mapOptions(zoomToLimits = "first")
library(leaflet)
library(sf)
library(htmlwidgets)
library(dplyr)
library(parlitools)
library(cartogram)
west_hex_map <- parlitools::west_hex_map
party_colour <- parlitools::party_colour
elect2017 <- parlitools::bes_2017
elect2017_win_colours <- left_join(elect2017, party_colour, by = c("winner_17" ="party_name")) #Join to current MP data
gb_hex_map <- right_join(west_hex_map, elect2017_win_colours, by = c("gss_code"="ons_const_id")) #Join colours to hexagon map
gb_hex_map <- as(gb_hex_map, "Spatial")
gb_hex_map <- as(gb_hex_map, "SpatialPolygonsDataFrame")
gb_hex_map$majority_17 <- round(gb_hex_map$majority_17, 2)
gb_hex_map$turnout_17 <- round(gb_hex_map$turnout_17, 2)
gb_hex_map$marginality <- (100-gb_hex_map$majority_17)^3
gp_hex_scaled <- cartogram_cont(gb_hex_map, 'marginality', itermax = 5)
# Creating map labels
labels <- paste0(
"Constituency: ", gp_hex_scaled$constituency_name.y, "</br>",
"Most Recent Winner: ", gp_hex_scaled$winner_17, "</br>",
"Most Recent Majority: ", gp_hex_scaled$majority_17, "%","</br>",
"Turnout: ", gp_hex_scaled$turnout_17, "%"
) %>% lapply(htmltools::HTML)
# Creating the map itself
leaflet(options=leafletOptions(
dragging = FALSE, zoomControl = FALSE, tap = FALSE,
minZoom = 6, maxZoom = 6, maxBounds = list(list(2.5,-7.75),list(58.25,50.0)),
attributionControl = FALSE),
gp_hex_scaled) %>%
addPolygons(
color = "grey",
weight=0.75,
opacity = 0.5,
fillOpacity = 1,
fillColor = ~party_colour,
label=labels) %>%
htmlwidgets::onRender(
"function(x, y) {
var myMap = this;
myMap._container.style['background'] = '#fff';
}")%>%
mapOptions(zoomToLimits = "first")
library(leaflet)
library(sf)
library(htmlwidgets)
library(dplyr)
library(parlitools)
library(cartogram)
west_hex_map <- parlitools::west_hex_map
party_colour <- parlitools::party_colour
elect2017 <- parlitools::bes_2017
elect2017_win_colours <- left_join(elect2017, party_colour, by = c("winner_17" ="party_name")) #Join to current MP data
gb_hex_map <- right_join(west_hex_map, elect2017_win_colours, by = c("gss_code"="ons_const_id")) #Join colours to hexagon map
gb_hex_map <- as(gb_hex_map, "Spatial")
gb_hex_map <- as(gb_hex_map, "SpatialPolygonsDataFrame")
gb_hex_map$majority_17 <- round(gb_hex_map$majority_17, 2)
gb_hex_map$turnout_17 <- round(gb_hex_map$turnout_17, 2)
gb_hex_map$marginality <- (100-gb_hex_map$majority_17)^3
gp_hex_scaled <- cartogram_cont(gb_hex_map, 'marginality', itermax = 5)
# Creating map labels
labels <- paste0(
"Constituency: ", gp_hex_scaled$constituency_name.y, "</br>",
"Most Recent Winner: ", gp_hex_scaled$winner_17, "</br>",
"Most Recent Majority: ", gp_hex_scaled$majority_17, "%","</br>",
"Turnout: ", gp_hex_scaled$turnout_17, "%"
) %>% lapply(htmltools::HTML)
# Creating the map itself
leaflet(options=leafletOptions(
dragging = FALSE, zoomControl = FALSE, tap = FALSE,
minZoom = 6, maxZoom = 6, maxBounds = list(list(2.5,-7.75),list(58.25,50.0)),
attributionControl = FALSE),
gp_hex_scaled) %>%
addPolygons(
color = "grey",
weight=0.75,
opacity = 0.5,
fillOpacity = 1,
fillColor = ~party_colour,
label=labels) %>%
htmlwidgets::onRender(
"function(x, y) {
var myMap = this;
myMap._container.style['background'] = '#fff';
}")%>%
mapOptions(zoomToLimits = "first")
library(devtools)
install_github("psychemedia/htmlwidget-hexjson")
library(jsonlite)
library(hexjsonwidget)
m<- fromJSON("constituencies.hexjson")
hexjsonwidget(m, label = NA)
summarydata <- read.csv("hocl-ge2015-results-summary.csv")
summarydata
summarydata[:,7]
summarydata[,7]
summarydata[,9]
summarydata[,10]
View(summarydata)
party_colour
colors <- party_colour
View(colors)
View(m)
View(summarydata)
View(m)
View(m)
View(colors)
View(summarydata)
View(m)
View(summarydata)
View(m)
?df
View(m)
hexj
data.frame()
?data.frame
View(summarydata)
cols <- function(abbrev){
if (abbrev == "Lab"){}
}
party_colour
cols("Lab")
cols("Lab")
cols("Lab")
cols("Lab")
cols("Lab")
cols("Lab")
cols <- function(abbrev){
if(strcmp(c(abbrev, "Lab"))){
return("#DC241F")
}
}
cols("Lab")
"Lab" == "Lab"
abbrev <- "Lab"
abbrev == "Lab"
cols("Lab")
cols("Lab")
cols(Lab)
cols(Lab)
